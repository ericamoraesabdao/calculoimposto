name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load environment variables
        run: |
          if [ -f .env ]; then
            echo "Loading environment variables from .env"
            export $(grep -v '^#' .env | xargs)
            # Salvar variÃ¡veis no ambiente do GitHub Actions
            printenv | grep -E 'DB_HOST|DB_PORT|DB_NAME|DB_USERNAME|DB_PASSWORD' >> $GITHUB_ENV
          fi

      - name: Install Podman and Podman-Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y podman podman-compose

      - name: Install Maven
        run: sudo apt-get install -y maven

      - name: Check Podman and Podman-Compose versions
        run: |
          podman --version
          podman-compose --version

      - name: Configure Podman
        run: |
          sudo podman system migrate
          sudo podman info

      - name: Start services with Podman-Compose
        run: sudo podman-compose --env-file .env up -d

      - name: Check container status
        run: podman ps -a

      - name: Show PostgreSQL logs
        if: failure()
        run: podman logs postgres-container

      - name: Wait for PostgreSQL
        run: |
          for i in {1..30}; do
            podman exec postgres-container psql -U ${{ secrets.DB_USERNAME }} -d ${{ secrets.DB_NAME }} -c "SELECT 1" && echo "PostgreSQL is ready" && exit 0
            echo "Waiting for PostgreSQL..."
            sleep 5
          done
          echo "PostgreSQL failed to start" && exit 1

      - name: Run tests
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          SPRING_PROFILES_ACTIVE: test
        run: mvn test -X

      - name: Debug environment
        if: always()
        run: |
          printenv | grep -E 'DB_HOST|DB_PORT|DB_NAME|DB_USERNAME|DB_PASSWORD'

      - name: Stop services
        if: always()
        run: podman-compose down